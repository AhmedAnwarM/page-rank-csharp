@using System.ServiceModel
@using System.ServiceModel.Channels
@using test.Controllers
@using test.Models
@model SearchModel

@functions {
    private List<SearchResult> _results = new List<SearchResult>();
}

@{
    ViewBag.Title = "Page Rank";
}

<div class="row">
    <div id="page">
        <div id="searchFormDiv" class="col-md-12">
            <form id="searchForm" method="post">
                <fieldset>
                    @Html.TextBox("SearchText")
                    <input type="submit" value="Submit" id="submitButton" onclick=
                           @{
                               try
                               {
                                   bool numberOfKeywords;
                                   var numberOfKeywordsForm = Request.Form["NumberOfKeywords"];
                                   if (string.IsNullOrEmpty(numberOfKeywordsForm))
                                   {
                                       numberOfKeywords = false;
                                   }
                                   else if (numberOfKeywordsForm.Contains(','))
                                   {
                                       numberOfKeywordsForm = numberOfKeywordsForm.Substring(0, numberOfKeywordsForm.IndexOf(','));
                                       numberOfKeywords = numberOfKeywordsForm.AsBool();
                                   }
                                   else
                                   {
                                       numberOfKeywords = numberOfKeywordsForm.AsBool();
                                   }

                                   bool lastUpdate;
                                   var lastUpdateForm = Request.Form["LastUpdate"];
                                   if (string.IsNullOrEmpty(lastUpdateForm))
                                   {
                                       lastUpdate = false;
                                   }
                                   else if (lastUpdateForm.Contains(','))
                                   {
                                       var temp = lastUpdateForm.Substring(0, lastUpdateForm.IndexOf(','));
                                       lastUpdate = temp.AsBool();
                                   }
                                   else
                                   {
                                       lastUpdate = lastUpdateForm.AsBool();
                                   }

                                   bool domainAge;
                                   var domainAgeForm = Request.Form["DomainAge"];
                                   if (string.IsNullOrEmpty(domainAgeForm))
                                   {
                                       domainAge = false;
                                   }
                                   else if (domainAgeForm.Contains(','))
                                   {
                                       var temp = domainAgeForm.Substring(0, domainAgeForm.IndexOf(','));
                                       domainAge = temp.AsBool();
                                   }
                                   else
                                   {
                                       domainAge = domainAgeForm.AsBool();
                                   }

                                   bool domainExpiryDate;
                                   var registerDateForm = Request.Form["DomainExpiryDate"];
                                   if (string.IsNullOrEmpty(registerDateForm))
                                   {
                                       domainExpiryDate = false;
                                   }
                                   else if (registerDateForm.Contains(','))
                                   {
                                       var temp = registerDateForm.Substring(0, registerDateForm.IndexOf(','));
                                       domainExpiryDate = temp.AsBool();
                                   }
                                   else
                                   {
                                       domainExpiryDate = registerDateForm.AsBool();
                                   }

                                   bool loadingSpeed;
                                   var loadingSpeedForm = Request.Form["LoadingSpeed"];
                                   if (string.IsNullOrEmpty(loadingSpeedForm))
                                   {
                                       loadingSpeed = false;
                                   }
                                   else if (loadingSpeedForm.Contains(','))
                                   {
                                       var temp = loadingSpeedForm.Substring(0, loadingSpeedForm.IndexOf(','));
                                       loadingSpeed = temp.AsBool();
                                   }
                                   else
                                   {
                                       loadingSpeed = loadingSpeedForm.AsBool();
                                   }

                                   Console.WriteLine("SearchText: " + Request.Form["SearchText"] + "\r\n" +
                                                     numberOfKeywords + "\r\n" +
                                                     lastUpdate + "\r\n" +
                                                     domainAge + "\r\n" +
                                                     domainExpiryDate + "\r\n" +
                                                     loadingSpeed);
                                   _results.Clear();
                                   _results = PageRankController.ExecuteSearch(Request.Form["SearchText"],
                                                                               numberOfKeywords,
                                                                               lastUpdate,
                                                                               domainAge,
                                                                               domainExpiryDate,
                                                                               loadingSpeed);
                               }
                               catch (Exception e)
                               {
                                   Console.WriteLine(e);
                                   Message.CreateMessage(MessageVersion.Default,
                                                         FaultCode.CreateReceiverFaultCode("SearchError", "SearchError"),
                                                         "Internal Server Error",
                                                         "Retry your search");
                               }
                           }/>

                    <br/>

                    @Html.CheckBox("NumberOfKeywords", false)
                    @Html.Label("numberOfKeywordsLabel", "Number of Keyword Matches")
                    <br/>

                    @Html.CheckBox("LastUpdate", false)
                    @Html.Label("lastUpdateLabel", "Last Update")
                    <br/>

                    @Html.CheckBox("DomainAge", false)
                    @Html.Label("domainAgeLabel", "Domain Age")
                    <br/>

                    @Html.CheckBox("DomainExpiryDate", false)
                    @Html.Label("DomainExpiryDateLabel", "Domain Expiry Date")
                    <br/>

                    @Html.CheckBox("LoadingSpeed", false)
                    @Html.Label("loadingSpeedLabel", "Loading Speed")
                    <br/>
                </fieldset>
            </form>
        </div>
        <div id="pattern" class="col-md-12">
            <ul class="list">
                @foreach (var result in _results)
                {
                    <li>
                        <a href=@result.Link class="inner">
                            <div class="li-img">
                                <h2>@result.Rank</h2>
                            </div>
                            <div class="li-text">
                                <h4 class="li-head">@result.Title</h4>
                                <p class="li-summary">@result.Snippet</p>
                            </div>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>